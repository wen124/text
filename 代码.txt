/*
#include<stdio.h>
void main(){
  int day;
  int month;
  int year;
  int count ;
 //printf("请输入年：");
 //scanf("%d",&year);
 //printf("请输入月：");
//scanf("%d",&month);
 //printf("请输入日：");
  //scanf("%d",&day);
scanf("%d%d%d",&year,&month,&day);
switch(month){
    case 1:count=0;break;
    case 2:count=31;break;
    case 3:count =59;break;
    case 4:count=90;break;
    case 5:count=120;break;
    case 6:count=151;break;
    case 7:count=181;break;
    case 8:count=212;break;
    case 9:count=243;break;
    case 10:count=173;break;
    case 11:count=304;break;
    case 12:count=334;break;
    default:printf("你输入有误\n");break;
     }
     count=count+day;
     if(year%4==0&&month>2){
         count++;
}
printf("这一天是这一年的第%d天",count);
return ;

}*/










#include <stdio.h>
#include <math.h>
float f(float x, float y, float z) {
    float a;a = x * x + 9.0f / 4.0f * y * y + z * z - 1;
    return a * a * a - x * x * z * z * z - 9.0f / 80.0f * y * y * z * z * z;
}
float h(float x, float z) {float y;
    for ( y = 1.0f; y >= 0.0f; y -= 0.001f)
        if (f(x, y, z) <= 0.0f)
            return y;
    return 0.0f;
}
void main() {float z,x,v,y0,ny,nx,nz,nd,d;
    for ( z = 1.5f; z > -1.5f; z -= 0.05f) {
        for ( x = -1.5f; x < 1.5f; x += 0.025f) {
             v = f(x, 0.0f, z);
            if (v <= 0.0f) {
                 y0 = h(x, z);
                 ny = 0.01f;
                 nx = h(x + ny, z) - y0;
                 nz = h(x, z + ny) - y0;
                 nd = 1.0f / sqrtf(nx * nx + ny * ny + nz * nz);
                 d = (nx + ny - nz) * nd * 0.5f + 0.5f;
                putchar(".:-=+*#%@"[(int)(d * 5.0f)]);
            }
            else
                putchar(' ');
        }
        putchar('\n');
    }
}



       //1.矩阵翻硬币

/*#include<stdio.h>

int main(){
    int i,j,n,m,x,y,b,c;
    int count=0;
    scanf("%d%d",&n,&m);
    int  a[n][m];
    for( b=0;b<n;b++){
       for( c=0 ;c<m;c++){
          a[b][c]=1;
       }
    }
    for(x=1;x<=n;x++){
        for(y=1;y<=m;y++){
            for(i=1;i*x<=n;i++){
                 for(j=1;j*y<=m;j++){
                      a[i*x-1][j*y-1]=! a[i*x-1][j*y-1];
                 }
            }
         }
      }
     for( b=0;b<n;b++){
       for( c=0 ;c<m;c++){
         if( a[b][c]==0)
         count++;
       }
    }
      printf("%d",count);
       return 0;
}

*/


/*

//2.分糖果

#include<stdio.h>
int equal();
int n;
int main(){
  int i;
    printf("请输入一个2-100之间的整数：\n");
  scanf("%d",&n);
     int arr[n];
     int b[n];
     int ans=0;
     printf("请输入%d个偶数：\n",n);
     for( i=0;i<n;i++){
     scanf("%d",&arr[i]);
     }

    while( equal(arr) )
    {
         for(i=0;i<n;i++){
         if(arr[i]%2!=0)
         {
             arr[i]+=1;
              ans++;
         }
              arr[i]=arr[i]/2;
             b[i]=arr[i];
        }
             arr[n-1]+=b[0];
             for(i=0;i<n-1;i++)
        {
             arr[i]+=b[i+1];
          }

  }

      printf("老师要补%d颗糖",ans);
         return 0;
}

int equal(int arr[])
{
 int i;
 int c=0;
 for(i=1;i<n;i++)
 {
     if(arr[i]!=arr[i-1])
           c++;
     }
     if(c>0)
    return 1;
    else return 0;
}



*/



/*
//2.分糖果

#include<stdio.h>
#define N 20
int n;
int equal();
void main()
{
 int num=0,count=0,i,j,child[N];
 printf("请输入小孩数：");
  scanf("%d",&n);
 printf("请输入每个小孩手中的原始糖数：");
 for(i=0;i<n;i++)
  scanf("%d",&child[i]);
 while(equal(child))
 {
 for(i=0;i<n;i++)
  {
       if(child[i]%2!=0)
   {
    child[i]+=1;
    num+=1;
   }
   child[i]/=2;
  }
  j=child[n-1];
  for(i=n-1;i>0;i--)
  child[i]+=child[i-1];
  child[0]+=j;
  count+=1;
 // for(i=0;i<n-1;i++)printf("%d ",child[i]);printf("\n");  检查用
 }
 printf("经过%d次交换后糖数相\n调整过程中新发%d颗糖\n糖数是%d颗\n",count,num,child[1]);
}
int equal(int child[])
{
 int i;
 for(i=1;i<n;i++)
 if(child[i]!=child[i-1])
 return 1;
 return 0;
}
*/





/*
//数列排序


#include<stdio.h>

int main(){
     int i,t, n,j;
     printf("输入数列的个数（1-200）：  ");
     scanf("%d",&n);
     int a[n];
     printf("输入数列的整数（绝对值小于10000）：  \n");
     for(i=0;i<n;i++)
     {
        scanf("%d",&a[i]);
     }
     for(i =0;i<n-1;i++)
    {
        for(j=i+1;j<n;j++){
        if(a[i]>a[j])
        {
            t=a[i];
            a[i]=a[j];
            a[j]=t;
        }
    }
    }
     for(i=0;i<n;i++){
     printf("%d     ",a[i]);
     }
  }


*/


/*

//3.16进制―>10

#include<stdio.h>
#include<string.h>

char h[100002];
int main(){
    int t,i,ans=0;
    printf("请输入一个16进制的数：");
      scanf("%s",&h);
      for(i=0;i<strlen(h);i++){
          if(h[i]>='0'&&h[i]<='9')
           t=h[i]-'0';
           else
            t=h[i]-'A'+10;
            ans=t+ans*16;
         }
      printf("转化成10进制为：%d",ans);
      return 0;
}


*/



/*
//4.16进制―>8

#include<stdio.h>
#include<string.h>

char  b[20001],c[40002],e[40002];
int main(){
    int i,j,n;
    printf("请输入转化的个数：");
    scanf("%d",&n);
    while(n--){
        int v,len=0;
       printf("请输入需要转化的数：");
       scanf("%s",b);
       for(i=strlen(b)-1;i>=0;i--){
               //16进制转换成2进制  从后往前展开
           if(b[i]>='0'&&b[i]<='9')
              v=b[i]-'0';
           else   v=b[i]-'A'+10;
              for(j=0;j<4 ;j++){
                 c[len++]=v%2+'0';
                 v/=2;
              }
       }
       c[len]='\0';
       int t=0;
       int x=0;
       int cnt=1;
       for(i=0;i<len;i++ ){
             //每三位一记
          if(cnt==4||i==len-1){
              x=cnt*(c[i]-'0')+x;
               e[t++]=x+'0';
               cnt=1;
               x=0;
                }
          else {
                x=cnt*(c[i]-'0')+x;
               cnt*=2;
             }
          }
          i=t-1;
          printf("转化的8进制为：");
          while (i>=0&&e[i]=='0')
             i--;
             if(i<0)
             printf("0");
           for(;i>=0;i--){
            printf("%c",e[i]);
           }
           printf("\n");
    }
    return 0;
 }


*/



/*

//5.10进制―>16

#include<stdio.h>
int main(){
   int i=0,j,t,x;
   char e[20001];
   long  a;
   printf("请输入0--2147483647之间的整数：");
   scanf("%d",&a);
   while (a>0){
          x =a%16;
          a/=16;
          if(x<10)
          e[i++]=x+'0';
          else
          e[i++]=x-10+'A';
          }
          e[i]='\0';
         for(j=i-1;j>=0;j--){
            printf("%c",e[j]);
   }
   return 0;
}

*/


/*

//6.特殊回文数

#include<stdio.h>

 int main(){
   int n,sum;
   int i,t,a,b,c,d,e,f;
   printf("输入满足各位数字之和(1--54)：");
   scanf("%d",&n);
    printf("满足条件的数有：\n");
     for(i=10000;i<=999999;i++){
         t=i;
         a=i%10;
          b=i/10%10;
          c=i/100%10;
         d=i/1000%10;
          e=i/10000%10;
          f=i/100000%10;
          sum=a+b+c+d+e+f;
          if(f==0&&a==e&&b==d&&sum==n)
       printf("%d\n",t);
        if(f>0&&a==f&&b==e&&c==d&&sum==n)
       printf("%d\n",t);
   }
   return 0;
 }


*/



/*

//回文数

#include<stdio.h>
int main(){
   int i,a,b,c,d,t=0;
   printf("这样的回文数有：\n");
   for(i=1000;i<10000;i++)
   {
       a=i%10;
       b=i/10%10;
       c=i/100%10;
       d=i/1000%10;
       if(a==d&&c==b)
    {
        printf("%d\t",i);
        t++;
    }
   }
   printf("共有%d个回文数",t);
   return 0;
}


*/


/*


//特殊的数字

#include<stdio.h>
int main(){
int  i,a,b,c;
int t=0;
   printf("这样的特殊的数字有：\n");
for(i=100 ; i <1000 ; i ++)
{
     a=i%10;
     b=i/10%10;
     c=i/100%10;
     if(a*a*a+b*b*b+c*c*c==i)
     {
         printf("%d\t",i);
         t++;
     }
   }
   printf("\n");
   printf("共有%d个",t);
     return 0;

}

*/



/*

//杨辉三角形

#include<stdio.h>
int main(){
    int n,i,j;
     printf("请输出杨辉三角形的行数：");
     scanf("%d",&n);
      int a[34][34];
      for(i=0;i<34;i++){
         for(j=0;j<=i;j++){
            if(j==0||j==i)
                a[i][j]=1;
             else
                 a[i][j]=a[i-1][j-1]+a[i-1][j];
           }
      }
    printf("杨辉三角形的前%d行是：\n",n);
    for(i=0;i<n;i++){
       for(j=0;j<=i;j++){
         printf("%d  ",a[i][j]);
       }
       printf("\n");
    }
    return 0;
 }


*/


/*

//查找整数

#include<stdio.h>
int main(){
     int i,a, n;
     printf("请输入整数数列的个数：");
     scanf("%d",&n);
     int b[n];
     printf("整数数列为：");
     for(i=0;i<n;i++)
     {
         scanf("%d",&b[i]);
     }
     printf("你要查找的数：");
     scanf("%d",&a);
     for(i=0;i<n;i++)
     {
          if(a==b[i])
        {
            printf("%d", i+1);
            break ;
        }
        }
        if(i==n)
        printf("-1");
        return 0;
}


*/





//数列特征



#include<stdio.h>
int a[100001];
int n,m;
void swap(int  *b,int  *c)
{
       int t;
          t=*b;
        *b=*c;
        *c=t;

}

void sort(int a[ ],int s,int e)
{
    if(s>=e)  return ;
    int i,j;
    int k;
    k=a[s];
     i=s;
    j=e;
    while (i!=j)
    {
        while(i<j&&a[j]>=k)
            j--;
           swap(&a[i],&a[j]);
        while(i<j&&a[i]<=k)
          i++;
           swap(&a[i],&a[j]);
    }
       sort(a,s,i-1);
       sort(a,i+1,e);
}
int sum(int a[ ],int n)
{
    int i,t=0;
    for(i=0;i<n;i++)
    {
        t+=a[i];
    }
    return t;
}

int main()
{
     int n,i,count;
    printf("你想要多少个数：");
    scanf("%d",&n);
    printf("请输入%d个数    ",n);
    for(i=0;i<n;i++)
    {
       scanf("%d",&a[i]);
   }
    sort(a,0,n-1);
    for(i=0;i<n;i++){
    printf("%d   ",a[i]);
    }
    count= sum(a,n);
    printf("\n");
   printf("最大值为:%d\n",a[n-1]);
   printf("最小值为:%d\n",a[0]);
   printf("这些数之和为：%d\n",count);
  return 0;
}






//字母图形


#include<stdio.h>

char a[27][27];
int main()
{
     int i,j;
     int n,m;
     printf("请输入行和列：");
     scanf("%d%d",&n,&m);
    for(i=0;i<n;i++)
    {
        for(j=0;j<m;j++)
        {
            if(i==j)
            a[i][j]='A';
          else   if(i>j)
               a[i][j]=a[i-1][j]+1;
        else   a[i][j]=a[i][j-1]+1;
        }
    }
    for(i=0;i<n;i++)
    {
        for(j=0;j<m;j++)
        {
            printf("%c",a[i][j]);
        }
        printf("\n");
    }

}



//16进制转换到2,8,10 进制

#include<stdio.h>
char a[100001],s[400002],e[400002],h[200001];

int main()
{
    printf("请输入一个16进制的数：");
    scanf("%s",&a);
     int len,i,v,j;
    int t=0;
    len=strlen(a)-1;
    for(i=len;i>=0;i--)
    {
        if(a[i]>='0'&&a[i]<='9')
           v=a[i]-'0';
           else v=a[i]-'A'+10;
           for(j=0;j<4;j++)
           {
                s[t++]=v%2+'0';
                v/=2;
           }
    }

s[t]='\0';

int m=0,l=0;
int k=1;
        for(i=0;i<t;i++)
        {
            if(k==4||i==t-1)
            {
                 m=(s[i]-'0')*k+m;
                 e[l++]=m+'0';
                 k=1;
                 m=0;
            }
        else {
                    m=(s[i]-'0')*k+m;
                    k*=2;
           }
    }

    int h=0;
    i=l-1;
    j=t-1;
    printf("转化2进制为：");
    while(j>=0&&s[j]=='0')
              j--;

    for(;j>=0;j--)
    {    h*=2;
        h=(s[j]-'0')+h;
        printf("%c",s[j]);
    }

    printf("\n转化8进制为：");
    while(i>=0&&e[i]=='0')
              i--;
    for(;i>=0;i--)
    {
        printf("%c",e[i]);

    }
printf("\n转化10进制为：%d",h);
    return 0;
}




/*
//数列特征

#include<stdio.h>
int a[100001];
int n;
void swap(int  *b,int  *c)
{
       int t;
          t=*b;
        *b=*c;
        *c=t;

}

void sort(int a[ ],int s,int e)
{
    if(s>=e)  return ;
    int i,j;
    int k;
    k=a[s];
     i=s;
    j=e;
    while (i!=j)
    {
        while(i<j&&a[j]>=k)
            j--;
           swap(&a[i],&a[j]);
        while(i<j&&a[i]<=k)
          i++;
           swap(&a[i],&a[j]);
    }
       sort(a,s,i-1);
       sort(a,i+1,e);
}
int sum(int a[ ],int n)
{
    int i,t=0;
    for(i=0;i<n;i++)
    {
        t+=a[i];
    }
    return t;
}

int main()
{
     int n,i,count;
    printf("你想要多少个数：");
    scanf("%d",&n);
    printf("请输入%d个数    ",n);
    for(i=0;i<n;i++)
    scanf("%d",&a[i]);
    sort(a,0,n-1);
   // for(i=0;i<n;i++)
  // printf("%d   ",a[i]);
    count= sum(a,n);
    printf("\n");
   printf("最大值为:%d\n",a[n-1]);
   printf("最小值为:%d\n",a[0]);
   printf("这些数之和为：%d\n",count);
  return 0;
}


*/





/*

//01字串

#include<stdio.h>
int main()
{
    int  i,n=0;
    for(i=0;i<32;i++)
    {
      printf("%d",i/16);
      printf("%d",i/8 %2);
      printf("%d",i/4%2);
      printf("%d",i/2%2);
      printf("%d",i%2);
      printf("\n");
      n++;
    }
    printf("总共有%d种",n);
    return 0;
}


*/


/*
//闰年判断


#include<stdio.h>
int main()
{
    int y;
    printf("请输入一个整数年份：");
    scanf("%d",&y);
    if(y%4==0&&y%100 !=0)
    printf("yes");
    else if(y%400==0)
    printf("yes");
    else printf("no");
    return 0;
}

*/



/*
//16进制转换到2,8,10 进制

#include<stdio.h>
char a[100001],s[400002],e[400002],h[200001];

int main()
{
    printf("请输入一个16进制的数：");
    scanf("%s",&a);
     int len,i,v,j;
    int t=0;
    len=strlen(a)-1;
    for(i=len;i>=0;i--)
    {
        if(a[i]>='0'&&a[i]<='9')
           v=a[i]-'0';
           else v=a[i]-'A'+10;
           for(j=0;j<4;j++)
           {
                s[t++]=v%2+'0';
                v/=2;
           }
    }

s[t]='\0';

int m=0,l=0;
int k=1;
        for(i=0;i<t;i++)
        {
            if(k==4||i==t-1)
            {
                 m=(s[i]-'0')*k+m;
                 e[l++]=m+'0';
                 k=1;
                 m=0;
            }
        else {
                    m=(s[i]-'0')*k+m;
                    k*=2;
           }
    }

    int h=0;
    i=l-1;
    j=t-1;
    printf("转化2进制为：");
    while(j>=0&&s[j]=='0')
              j--;

    for(;j>=0;j--)
    {    h*=2;
        h=(s[j]-'0')+h;
        printf("%c",s[j]);
    }

    printf("\n转化8进制为：");
    while(i>=0&&e[i]=='0')
              i--;
    for(;i>=0;i--)
    {
        printf("%c",e[i]);

    }
printf("\n转化10进制为：%d",h);
    return 0;
}


*/



/*
//阶乘计算


#include <stdio.h>
#include<string.h>
int max=10000;
int main()
{
    int a[max];
    int i,j,n,c,s=0;
    int t=0;
     memset(a,0,sizeof(a));
     a[0]=1;
    printf("请输入n的阶乘：");
    scanf("%d",&n);
    for(i=1;i<=n;i++)
    {
        for(j=0;j<max;j++)
        {
              c=a[j]*i+s;
              a[j]=c%10;
              s=c/10;
        }
    }
         j=max-1;
    while(a[j]==0)
       {
           j--;

       }
    printf("%d!=",n);
    for(;j>=0;j--)
    printf("%d",a[j]);
    return 0;

}

*/



/*


//高精度加法


#include<stdio.h>
#include<string.h>

char a[100],b[100],c[100];

int main()
{
    memset(c,0,sizeof(c));
    int i,j,n;
    int alen,blen;
    printf("请输入一个小于100位的非负整数a:");
    scanf("%s",a);
    printf("请输入一个小于100位的非负整数b:");
    scanf("%s",b);
    alen=strlen(a);
    blen=strlen(b);
    for(i=0;i<alen||i<blen;i++)
    {
        if(i<alen)
        c[i]+=a[alen-i-1]-'0';
          if(i<blen)
          c[i]+=b[blen-i-1]-'0';
          if(c[i]>=10)
          {
              c[i+1]=c[i]/10;
              c[i]%=10;
          }
    }
     printf("a+b=");
     while(c[i]==0)
        i--;
        if(i<0)
        printf("0");
    for(;i>=0;i--)
    {
        printf("%d",c[i]);
    }
    return 0;
}





*/


/*

//huffuman树

#include<stdio.h>

int n,t=0;
int a[101];

 int main()
 {
     int i,j,k,temp;
     printf("输入数列的个数：");
     scanf("%d",&n);
     printf("输入数列：");
     for(i=0;i<n;i++)
     scanf("%d",&a[i]);
     for(i=0;i<n-1;i++)
     {
         for(j=1;j<n;j++)
         {
            if(a[j]!=0&&a[0]>a[j])                      //数列最小值为a[0]
            {
                temp=a[j];
                a[j]=a[0];
                a[0]=temp;
            }
         }

            for(j=2;j<n;j++)                   //数列第二小值为a[1]
         {
             if(a[1]==0)
             {
                 temp=a[j];
                a[j]=a[1];
                a[1]=temp;
             }

          if(a[j]!=0&&a[1]>a[j])
            {
                temp=a[j];
                a[j]=a[1];
                a[1]=temp;
            }
         }

     a[0]=a[0]+a[1];
     a[1]=0;
     t+=a[0];
     printf("总费用为：%d\n",t);
     for(k=0;k<n;k++)
     printf("%d  ",a[k]);
 }


 }



*/


//回形取数
#include<stdio.h>

int main()
{
    int n,m,i,j,sum;
    printf("输入行和列数：：");
    scanf("%d %d",&m,&n);
    printf("输入%d行和%d列：",m,n);
    int a[m][n];
    for(i=0;i<m;i++)
    {
        for(j=0;j<n;j++)
            scanf("%d",&a[i][j]);
    }
    sum=m*n;
    i=-1;
    j=0;
    while(sum)  //循环m*n次
    {
        while (a[++i][j]!=-1 &&i<m)    //往下走
        {
            printf(" %d  ",a[i][j]);
            a[i][j]=-1;
            sum--;
        }
        i--;

        while (a[i][++j]!=-1 && j<n)    //往右走
        {
             printf(" %d  ",a[i][j]);
             a[i][j]=-1;
            sum--;
        }
        j--;

         while (a[--i][j]!=-1 &&i>=0)      //往上走
        {
             printf(" %d  ",a[i][j]);
             a[i][j]=-1;
            sum--;
        }
        i++;

         while (a[i][--j]!=-1 &&j>=0)      //往左走
        {
             printf(" %d ",a[i][j]);
             a[i][j]=-1;
            sum--;
        }
        j++;

    }
    return 0;
}
















